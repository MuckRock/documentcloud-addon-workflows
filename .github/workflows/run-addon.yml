
name: Run Add-On
on:
  workflow_call:
    inputs:
      timeout:
        default: 5
        required: false
        type: number
      python-version:
        default: "3.10"
        required: false
        type: string
      git-commit:
        default: false
        required: false
        type: boolean
      apt-packages:
        default: ""
        required: false
        type: string
    secrets:
      dc_username:
        required: false
      dc_password:
        required: false
      token:
        required: false
      key:
       required: false

jobs:
  Run-Add-On:
    runs-on: ubuntu-latest
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - name: ${{ github.event.client_payload.id }}
        run: echo run identifier ${{ github.event.client_payload.id }}
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install apt packages
        if: inputs.apt-packages != ''
        run: sudo apt-get -y install ${{ inputs.apt-packages }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Mask Inputs
        run: |
          SECRET=$(jq -r '.client_payload' $GITHUB_EVENT_PATH)
          while read -r line;
          do
            if [ "${line}" != "{" ] && [ "${line}" != "}" ]; then
              echo "::add-mask::${line}"
            fi
          done <<< $SECRET
      - name: Run add-on
        run: python main.py '${{ toJSON(github.event.client_payload) }}'
        env:
          DC_USERNAME: ${{ secrets.dc_username }}
          DC_PASSWORD: ${{ secrets.dc_password }}
          TOKEN: ${{ secrets.token }}
          KEY: ${{ secrets.key }}
      - name: Commit and push if it changed
        if: inputs.git-commit
        run: |-
          git config user.name "Automated"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          timestamp=$(date -u)
          git commit -m "Latest data: ${timestamp}" || exit 0
          git push
